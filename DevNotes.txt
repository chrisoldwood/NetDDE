Development Structure
---------------------

The source folder structure is required by the solution & projects to be like
this:-

+-NetDDE
+-Lib
| +-Core
| +-NCL
| +-WCL
+-Scripts

The following commands will create that structure by cloning the various
application and library repositories:-

C:\> mkdir Win32
C:\> git clone https://github.com/chrisoldwood/NetDDE.git Win32\NetDDE
C:\> mkdir Win32\Lib
C:\> git clone https://github.com/chrisoldwood/Core.git Win32\Lib\Core
C:\> git clone https://github.com/chrisoldwood/NCL.git Win32\Lib\NCL
C:\> git clone https://github.com/chrisoldwood/WCL.git Win32\Lib\WCL
<optional>
C:\> git clone https://github.com/chrisoldwood/Scripts.git Win32\Scripts

Command Line Builds
-------------------

Included in the scripts folder is one for building via the command line:-

C:\> Win32\Scripts\SetVars vc90
C:\> Win32\Scripts\Build debug Win32\NetDDE\NetDDE.sln

There is also one for upgrading to a later version of Visual C++:-

C:\> Win32\Scripts\SetVars vc140
C:\> Win32\Scripts\Upgrade Win32\NetDDE\NetDDE.sln

Automated Tests
---------------

There is a unit test project built as part of the solution:

> Test\Debug\%VC_PLATFORM%\Test.exe

There are also some end-to-end tests that use Excel as the data source and my
DDE Command tool [1] as the driver (it needs to be on the PATH).

> pushd Test\EndToEnd
> run

[1] http://www.chrisoldwood.com/win32.htm#ddecommand

There is a simple test to check backwards compatibility with the JavaScript
netdde package [2]. It also uses Excel as the source and assumes the same NetDDE
configuration used above but requires all three processes to be started
manually:

> start "C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE" Test\EndToEnd\Empty.xls
> Server\Debug\%VC_PLATFORM%\NetDDEServer.exe
> pushd Test\EndToEnd\netdde-js 
> run

[2] https://github.com/st-one-io/netdde

To check backwards compatibility with the v2.0 (32-bit) client and server:

> pushd Client\Debug\Win32
> powershell -c "iwr 'http://www.chrisoldwood.com/win32/netdde/netdde20r.zip' -o netdde20r.zip"
> 7z e -aoa netdde20r.zip NetDDEClient.exe
> popd && pushd Test\EndToEnd
> powershell -File TestPrimitives.ps1 x64 Win32
> powershell -File TestAdvises.ps1 x64 Win32
> popd
> del Client\Debug\Win32\NetDDEClient.exe

> pushd Server\Debug\Win32
> powershell -c "iwr 'http://www.chrisoldwood.com/win32/netdde/netdde20r.zip' -o netdde20r.zip"
> 7z e -aoa netdde20r.zip NetDDEServer.exe
> popd && pushd Test\EndToEnd
> powershell -File TestPrimitives.ps1 Win32 x64
> powershell -File TestAdvises.ps1 Win32 x64
> popd
> del Server\Debug\Win32\NetDDEServer.exe

Release Checklist
-----------------

- Update version number (App.rcv x 2, NetDDE.wxs).
- Update documentation (ReadMe.txt, RelNotes.txt, and Manual.html).
- Build and run tests.
- Build packages (zip, msi).
- Tag repository.
- Upload packages.

Chris Oldwood 
6th December 2022
